# tmux configuration
# forked from https://github.com/tony/tmux-config/blob/master/.tmux.conf

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow

# default window title colors
set-window-option -g window-status-style fg=colour245,bg=default # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=colour255,bg=default # fg=orange

# auto window rename
set-window-option -g automatic-rename

# automatically renumber windws
set-option -g renumber-windows on

set-option -g focus-events on

# easy reload config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# create a window with a given name
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# pane border
set-option -g pane-border-style fg=colour240
set-option -g pane-active-border-style fg=colour240

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Remove status bar right hand
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left '#[default]'
set -g status-right ''


# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1
set -g mouse on

# Allows for faster key repetition
set -s escape-time 10

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on


# hjkl pane traversal
# set window split
bind-key v split-window -h
bind-key b split-window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

# Colors
set -g default-terminal "screen-256color"
set -as terminal-features ",*:RGB"
